language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
dist: trusty
r:
- 3.2
- 3.3
- 3.4
- release
- devel
allow_failures:
- r: devel
- os: osx
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export rver=`r_version`;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- Rscript -e 'source("https://install-github.me/mangothecat/callr")'
- jags_install
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" ]]; then gsl_install ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; alias R="travis_wait
  100 ${x}" ; fi
after_success:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
after_failure:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: Fs0H0G4u2c2cKWa4LbBc7eERQI90r0Mar6tWr78Es3CHGgpQwc+2IS4xf6K7jLYTcnUeOaKWCRW6P8LnD8Tu4FDWhdDCJGeDVoz55NQaxZppb3DmSD0bdWWo8dl9e1I1VfHw2Ha5dZiKv7hn6c6KTnf42M7WtALxblC4YFUggp856n+LmtDIKcuR01M+6cWecb3e4qE4h/CA7BzlsTRS16vu9Q5YN0szbN31g1N8fwheYYwRWgvRbfJUrTW4HnAtDr97L3f55BXEe4ATns52r7gZYEzkf2eQJwkzuB8NpPL/GOmwqCJXHdH6rmXfmc4p7nYF6Q1Ij3wXQUaJ+vBx4fz+TnQ6jCn/dEQt1h0EkerYBr0oyc7S7wjIDwo3U9NuTW+jUS++fA5ZCqZCV1+7jnp2pGXSoCcmnK+pjQ1kMBIWHBylJxZjTPI8lZGd7LjZFz1kY+DW1sroYlHCixQyYWGOnXjltdBIr0Xb1gGZm39yQRYrvYGMojrgtKdhuXJYCYbEpPVnaYbIjlkgR/xSEm/3TsmiZK+bWkjcdY+2olQXpfb7qq606KF8G/oiC7tz3/8hIUKfa+NF54LuefaeOmGF7mv5fPwDPXl4rE7gtrXbU/FV6GdvknpxELCV7zrJnyfmTFG98YEEabQZ9rgrMfuLVUzmQKwKEOiWIHdFuWE=
after_deploy:
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" ]];
  then echo 'covr::coveralls(type = "all")' > neuroc_covr.R ; travis_wait 100 Rscript
  neuroc_covr.R ; rm neuroc_covr.R ; fi

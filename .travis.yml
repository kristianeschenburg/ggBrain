language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
dist: trusty
r:
- 3.2
- 3.3
- 3.4
- release
- devel
allow_failures:
- r: devel
- os: osx
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export rver=`r_version`;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- Rscript -e 'source("https://install-github.me/mangothecat/callr")'
- jags_install
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" ]]; then gsl_install ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; alias R="travis_wait
  100 ${x}" ; fi
after_success:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
after_failure:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: RofPI9+mPFKv3dlHiCkz4YO1mrJgwcYJxBfcHfEz2jlD34HwHFLZvHMFyWAuv/HY7jXTCudMicdnhNA/fIY5hcbNfkKkvPmRO3XmqvneS35lAtoHaNYtCs/rASf8Zets17gQ2QOcnGj5oRdgOJV2Lr06dflcQjWh7e1HBrLVY5uhZBl3U0WwfDoUbX+6afWFyDfwYDZNLcmZANfAui2xRzwYC6C4Is5/uUyzyAz8D7R1ZRdRNWbRVjeFk99sWg31c1Mnk//59WZ+lpumnN33s62mH+YPS1G+TueDDs82WTiWmhrCeJCh/TSNLK73hjswbGSBOnxwLOoA9AittErtFBeYDBxACIvs2A84WyNHyO0PirdcmWiVMRIxQDP44HpXJl1yN0OGkRjc7sJZPOQm5Zt9VQzYzmKPjetR+/XElENRNrMZHfsMHpqzeez/iqbOHdgI8rp59MRLNFvAEGmlUlyme7XobK2XGrzrm9ZXHOzeZnP2GWWoGJ4xqinxgFnUY6utq25Mjqbux7lqXCvAl3zzIbmZn4ccZP9tXKPYZ6Cau5HaaNu+UG7kGZ0abaTG0zB3MIpcn5MAe7KTFAtMGITSO3EQAWQMi/zpIp6pJt6kNtQpzP5BgirdQs2/YWgm1d2pBJa5Nxuhbev1709yZ7S+Zo8Fha8pVy90eBsuCDE=
after_deploy:
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" ]];
  then echo 'covr::coveralls(type = "all")' > neuroc_covr.R ; travis_wait 100 Rscript
  neuroc_covr.R ; rm neuroc_covr.R ; fi
